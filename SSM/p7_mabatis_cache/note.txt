本项目主要介绍的是：mybatis的缓存（理解为主）

1、一级缓存
    特征：默认自动开启
    级别：SqlSession
    概括：通过同一个SqlSession查询的数据会被缓存，下次查询相同的数据，就会从缓存中直接获取，不会从数据库重新访问
    举例1：
         SqlSession sqlSession1 = SqlSessionUtil.getSqlSession();
         empMapper mapper1 = sqlSession1.getMapper(empMapper.class);
         emp emp1 = mapper1.getEmpById(1);
         emp emp2 = mapper1.getEmpById(1);
         //使用同一个sqlSession创建的mapper对象，调用相同的方法，只会调用一次查询语句，另外的通过缓存获取

    举例2：
         SqlSession sqlSession1 = SqlSessionUtil.getSqlSession();
         empMapper mapper1 = sqlSession1.getMapper(empMapper.class);
         emp emp1 = mapper1.getEmpById(1);
         mapper1.insertEmp(new emp(1, "小红", 25,2));
         emp emp2 = mapper1.getEmpById(1);
         //但之前穿插增删改操作时，会把数据缓冲给清除

    举例3：
        sqlSession1.clearCache();//可以手动清除mybatis的缓存


2、二级缓存
    级别：SqlSessionFactory
    开启条件：
        a>在核心配置文件中，设置全局配置属性cacheEnabled="true"，默认为true，不需要设置
        b>在映射文件中设置标签<cache/>
        c>二级缓存必须在SqlSession关闭或提交之后有效
        d>查询的数据所转换的实体类类型必须实现序列化的接口
    失效情况：
        两次查询之间执行了任意的增删改（同时一级缓存也同时失效）
    （一级，二级）两者查询顺序
        先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用。
        如果二级缓存没有命中，再查询一级缓存
        如果一级缓存也没有命中，则查询数据库
        SqlSession关闭之后，一级缓存中的数据会写入二级缓存
    示例：
        InputStream resourceAsStream = Resources.getResourceAsStream("mybatis-config.xml");
        SqlSessionFactory build = new SqlSessionFactoryBuilder().build(resourceAsStream);
        SqlSession sqlSession1 = build.openSession(true);
        SqlSession sqlSession2 = build.openSession(true);
        empMapper mapper1 = sqlSession1.getMapper(empMapper.class);
        empMapper mapper2 = sqlSession2.getMapper(empMapper.class);
        System.out.println(mapper1.getEmpById(2));
        sqlSession1.close();//需要关闭，一级缓存才能写入二级缓存
        System.out.println(mapper2.getEmpById(2));
三、第三方工具
    EHCache（具体操作可参考教学文档）