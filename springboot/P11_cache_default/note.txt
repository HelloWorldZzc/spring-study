==========缓存（springboot默认缓存方案）=============
某些数据可以是用户经常访问/修改的数据，如果一直从数据库中操作会增加数据库的负担，因此可以使用缓存技术
将一些数据存储与缓存中，下次再次访问时可先查询缓存，缓存若没有的话则对数据库进行查询，减少数据库的负担

前置条件：准备基本的mybatisPlus案例
简单使用缓存技术
    1、导入缓存所需要的依赖
    2、在启动类中 启用缓存
    3、在需要使用缓存的地方使用缓存注解（@Cacheable--使用缓存、@CachePut--更新缓存、@CacheEvict--删除缓存）

本案例相关信息分析：
    1、在查询时候，如果在缓存中存在，那么不会再数据库中查询，直接读取缓存。@Cacheable注解，读取缓存中的数据
    2、存在bug，如果查询的数据被修改过，缓存中的数据是没有被修改的，那么会导致数据错误
    3、解决bug：可以使得每次修改之后，把修改后的数据都放入缓存中,使用@CachePut注解，用于更新缓存中的数据

小总结：
    启动了缓存之后，指定value(哪个缓存)，key(缓存的唯一标识是什么)
    如果相同的话，就会从缓冲中读取直接返回，不会再进行其他的逻辑
    但返回的类型要一致(或者能强转)，否则会报类转化异常


模拟案例--验证码校验
    获取验证码--->系统随机生成验证码，并把验证码放入缓存中
    返回验证码--->直接从缓存中读取，若缓冲中不存在返回null
    比较验证码--->用户输入与系统中验证码进行比较，模拟返回数据
