案例的流程分析过程:
1. 启动服务器初始化过程
    1 服务器启动,执行config.ServletContainersInitConfig中的类,初始化web容器
    2 执行类中的createRootApplicationContext方法,创建 WebApplicationContext对象
    3 加载springMvcConfig
    4 执行@ComponentScan加载对应的bean
    5 加载UserController，每个@RequestMapping的名称对应一个具体的方法
    执行getServletMappings方法，设定SpringMVC拦截请求的路径规则

2. 单次的请求过程
    1 浏览器发送请求,例如:http://localhost:8888/save
    2 web容器发现该请求满足SpringMVC拦截规则，将请求交给SpringMVC处理
    3 解析请求路径/save
    4 由/save匹配执行对应的方法save(）
    5 执行save()
    6 检测到有@ResponseBody直接将save()方法的返回值作为响应体返回给请求方